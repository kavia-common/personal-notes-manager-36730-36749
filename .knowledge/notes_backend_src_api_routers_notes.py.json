{"is_source_file": true, "format": "Python", "description": "Source code for a FastAPI-based REST API router handling CRUD operations for 'Note' entities, including functions to create, list, retrieve, update, and delete notes using SQLAlchemy ORM.", "external_files": ["api/db.py", "api/models.py", "api/schemas.py"], "external_methods": ["get_db", "Base.metadata.create_all", "db.get", "db.query", "db.add", "db.commit", "db.refresh", "db.delete"], "published": ["router"], "classes": [{"name": "Note", "description": "SQLAlchemy model representing a note in the database."}], "methods": [{"name": "Note _get_note_or_404(db: Session, note_id: int)", "description": "Helper function to retrieve a note by ID or raise HTTP 404 if not found.", "parameters": ["db: Session", "note_id: int"], "scope": "", "scopeKind": ""}, {"name": "NoteOut create_note(payload: NoteCreate, db: Session = Depends(get_db))", "description": "Creates a new note with optional title and content.", "scope": "", "scopeKind": ""}, {"name": "List[NoteOut] list_notes(db: Session = Depends(get_db))", "description": "Retrieves a list of all notes ordered by creation date descending.", "scope": "", "scopeKind": ""}, {"name": "NoteOut get_note( note_id: int = Path(..., description=\"ID of the note to retrieve\", ge=1), db: Session = Depends(get_db), )", "description": "Fetches a single note by its ID.", "scope": "", "scopeKind": ""}, {"name": "NoteOut update_note( payload: NoteUpdate, note_id: int = Path(..., description=\"ID of the note to update\", ge=1), db: Session = Depends(get_db), )", "description": "Updates an existing note's title and/or content.", "scope": "", "scopeKind": ""}, {"name": "None delete_note( note_id: int = Path(..., description=\"ID of the note to delete\", ge=1), db: Session = Depends(get_db), )", "description": "Deletes a note by its ID.", "scope": "", "scopeKind": ""}], "calls": ["db.get", "db.query", "db.add", "db.commit", "db.refresh", "db.delete", "Base.metadata.create_all"], "search-terms": ["notes_router", "FastAPI CRUD", "Note model", "SQLAlchemy ORM", "FastAPI dependency injection", "get_db"], "state": 2, "file_id": 9, "knowledge_revision": 20, "git_revision": "", "ctags": [{"_type": "tag", "name": "_get_note_or_404", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36730-36749/notes_backend/src/api/routers/notes.py", "pattern": "/^def _get_note_or_404(db: Session, note_id: int) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "function", "signature": "(db: Session, note_id: int)"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36730-36749/notes_backend/src/api/routers/notes.py", "pattern": "/^def create_note(payload: NoteCreate, db: Session = Depends(get_db)) -> NoteOut:$/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "(payload: NoteCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36730-36749/notes_backend/src/api/routers/notes.py", "pattern": "/^def delete_note($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( note_id: int = Path(..., description=\"ID of the note to delete\", ge=1), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36730-36749/notes_backend/src/api/routers/notes.py", "pattern": "/^def get_note($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( note_id: int = Path(..., description=\"ID of the note to retrieve\", ge=1), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36730-36749/notes_backend/src/api/routers/notes.py", "pattern": "/^def list_notes(db: Session = Depends(get_db)) -> List[NoteOut]:$/", "language": "Python", "typeref": "typename:List[NoteOut]", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36730-36749/notes_backend/src/api/routers/notes.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36730-36749/notes_backend/src/api/routers/notes.py", "pattern": "/^def update_note($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( payload: NoteUpdate, note_id: int = Path(..., description=\"ID of the note to update\", ge=1), db: Session = Depends(get_db), )"}], "hash": "bfc35cda7998e0994394af88d3196684", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/routers/notes.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"20": ""}]}